{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Container/Container.module.css","components/Filter/Filter.module.css","components/Container/Container.js","redux/actions.js","redux/selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/reducer.js","redux/store.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","Container","children","className","s","container","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","getFilter","state","contacts","filter","getContacts","items","getVisibleContacts","contscts","normalizedFilter","toLowerCase","contact","includes","ContactForm","useState","useName","useNumber","useSelector","dispatch","useDispatch","handleChange","event","target","value","reset","form","onSubmit","nameInclude","reduce","acc","numbersInclude","alert","contactCheck","preventDefault","contactsActions","type","onChange","pattern","title","required","button","size","ContactsList","list","map","item","text","onClick","Filter","App","createReducer","actions","_","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","querySelector"],"mappings":"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","file":"static/js/main.8404c19a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2XnS_\",\"button\":\"ContactForm_button__1mGz7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__qdasj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Filter_text__2oBT2\"};","import PropTypes from 'prop-types';\r\nimport s from './Container.module.css'\r\n\r\nexport default function Container ({children}){\r\n    return <div className={s.container}>{children}</div>\r\n}\r\n\r\nContainer.propTypes = {\r\n    children: PropTypes.array.isRequired,\r\n  };","/* eslint-disable import/no-anonymous-default-export */\r\nimport { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst addContact = createAction('contacts/add', ({ name, number }) => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\nconst deleteContact = createAction('contacts/delete');\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\nexport default { addContact, deleteContact, changeFilter };\r\n","export const getFilter = state => state.contacts.filter;\r\nexport const getContacts = state => state.contacts.items;\r\n\r\nexport const getVisibleContacts = state => {\r\n  const contscts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return contscts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport contactsActions from '../../redux/actions';\r\nimport { getContacts } from '../../redux/selectors';\r\nimport { IoIosPersonAdd } from 'react-icons/io';\r\nimport s from './ContactForm.module.css';\r\n\r\nexport default function ContactForm() {\r\n  const [name, useName] = useState('');\r\n  const [number, useNumber] = useState('');\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const contactCheck = () => {\r\n    const nameInclude = contacts.reduce(\r\n      (acc, contact) => [...acc, contact.name],\r\n      [],\r\n    );\r\n    const numbersInclude = contacts.reduce(\r\n      (acc, contact) => [...acc, contact.number],\r\n      [],\r\n    );\r\n    if (nameInclude.includes(name) || numbersInclude.includes(number)) {\r\n      alert(`${name}${number} is already in contacts`);\r\n    }\r\n  };\r\n\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        useName(value);\r\n        break;\r\n      case 'number':\r\n        useNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n  const handleSubmit = event => {\r\n    if (contactCheck()) {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    reset();\r\n    dispatch(contactsActions.addContact({ name, number }));\r\n  };\r\n  const reset = () => {\r\n    useName('');\r\n    useNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label>\r\n        <span>Name</span>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n      <label>\r\n        <span>Number</span>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={handleChange}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n      <button className={s.button} type=\"submit\">\r\n        <IoIosPersonAdd size={50} />\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { BsFillFileEarmarkExcelFill } from 'react-icons/bs';\r\nimport contactsActions from '../../redux/actions';\r\nimport { getVisibleContacts } from '../../redux/selectors';\r\nimport s from './ContactList.module.css';\r\n\r\nexport default function ContactsList() {\r\n  const contacts = useSelector(getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ name, id, number }) => (\r\n        <li key={id} className={s.item}>\r\n          <p className={s.text}>{name}:</p>\r\n          <span>{number}</span>\r\n          <button\r\n            className={s.button}\r\n            onClick={() => dispatch(contactsActions.deleteContact(id))}\r\n          >\r\n            <BsFillFileEarmarkExcelFill className={s.button} />\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)),\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport contactsActions from '../../redux/actions';\r\nimport { getFilter } from '../../redux/selectors';\r\nimport s from './Filter.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Filter() {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <label>\r\n      <p className={s.text}>Find contacts by name</p>\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={event =>\r\n          dispatch(contactsActions.changeFilter(event.target.value))\r\n        }\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.func,\r\n  onChange: PropTypes.func,\r\n};\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport Container from 'components/Container';\r\nimport ContactForm from 'components/ContactForm';\r\nimport ContactList from 'components/ContactList';\r\nimport Filter from 'components/Filter';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Container>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </Container>\r\n  );\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './actions';\r\n\r\nconst initialState = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\nconst items = createReducer(initialState, {\r\n  [actions.addContact]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './reducer';\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\nconst middleware = getDefaultMiddleware({\r\n  serializableCheck: {\r\n    ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n  },\r\n  logger,\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  middleware,\r\n});\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport store from 'redux/store';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.querySelector('#root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1sCZx\",\"item\":\"ContactList_item__1c-3F\",\"text\":\"ContactList_text__3d_jl\",\"button\":\"ContactList_button__1or0j\"};"],"sourceRoot":""}